    /*
     * This source file was generated by the Gradle 'init' task
     */
    package org.example.app;
    import java.util.*;
    import org.example.app.entities.Train;
    import org.example.app.entities.User;
    import org.example.app.services.UserBookingServices;
    import org.example.app.util.UserServiceUtil;

    import java.io.IOException;
    import java.util.ArrayList;
    import java.util.List;
    import java.util.Scanner;
    import java.util.UUID;

    public class App {
        public static void main(String[] args) {
            System.out.println("Running Train Booking Service");
            Scanner sc = new Scanner(System.in);
            int option = 0 ;
            UserBookingServices userBookingServices;
            Train trainSelectedForBooking = null;
            try {
                userBookingServices = new UserBookingServices();
            } catch (IOException e) {
                e.printStackTrace();  // Show the real error
                return;
            }

            while (option != 7){
                System.out.println("Choose Option");
                System.out.println("1 . Sign Up");
                System.out.println("2 . Login");
                System.out.println("3 . Fetch Booking");
                System.out.println("4 . Search a Train");
                System.out.println("5 . Book a Seat");
                System.out.println("6 . Cancel my Booking");
                System.out.println("7 . Exit the App");
                option = sc.nextInt();
                switch (option){
                    case 1:
                        sc.nextLine();
                        System.out.println("Enter UserName to SignUP ");
                        String nameToSignUp = sc.nextLine();
                        System.out.println("Enter Password to SignUp");
                        String passwordToSignUp = sc.nextLine();
                        User userToSignup = new User(nameToSignUp ,
                                passwordToSignUp ,
                                UserServiceUtil.hashPassword(passwordToSignUp),
                                new ArrayList<>() , UUID.randomUUID().toString());
                        userBookingServices.signUp(userToSignup);
                        break;
                    case 2:
                        sc.nextLine();
                        System.out.println("Enter UserName to Login: ");
                        String nameToLogin = sc.nextLine();
                        System.out.println("Enter Password to Login:");
                        String passwordToLogin = sc.nextLine();
                        User userToLogin = new User(nameToLogin ,
                                passwordToLogin ,
                                UserServiceUtil.hashPassword(passwordToLogin),
                                new ArrayList<>() , UUID.randomUUID().toString());
                        try {
                            userBookingServices = new UserBookingServices(userToLogin);
                        }catch(IOException ex){
                            return;
                        }
                        break;
                    case 3:
                        System.out.println("Fetching Your Bookings");
                        userBookingServices.fetchBookings();
                        break;
                    case 4:
                        System.out.println("Type your source station");
                        String source = sc.next();
                        System.out.println("Type your destination station");
                        String dest = sc.next();
                        List<Train> trains = userBookingServices.getTrains(source, dest);
                        int index = 1;
                        for (Train t: trains){
                            System.out.println(index+" Train id : "+t.getTrainId());
                            for (Map.Entry<String, String> entry: t.getStationTimes().entrySet()){
                                System.out.println("station "+entry.getKey()+" time: "+entry.getValue());
                            }
                        }
                        System.out.println("Select a train by typing 1,2,3...");
                        trainSelectedForBooking = trains.get(sc.nextInt());
                        break;
                    case 5:
                        System.out.println("Select a seat out of these seats");
                        List<List<Integer>> seats = userBookingServices.fetchSeats(trainSelectedForBooking);
                        for (List<Integer> row: seats){
                            for (Integer val: row){
                                System.out.print(val+" ");
                            }
                            System.out.println();
                        }
                        System.out.println("Select the seat by typing the row and column");
                        System.out.println("Enter the row");
                        int row = sc.nextInt();
                        System.out.println("Enter the column");
                        int col = sc.nextInt();
                        System.out.println("Booking your seat....");
                        Boolean booked = userBookingServices.bookTrainSeat(trainSelectedForBooking, row, col);
                        if(booked.equals(Boolean.TRUE)){
                            System.out.println("Booked! Enjoy your journey");
                        }else{
                            System.out.println("Can't book this seat");
                        }
                        break;
                    default:
                        break;
                }
            }
        }
    }
